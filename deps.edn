{:deps    {;; both frontend and backend
           org.clojure/clojure                   {:mvn/version "1.11.1"}
           metosin/malli                         {:mvn/version "0.10.2"}
           metosin/reitit                        {:mvn/version "0.6.0"}
           metosin/muuntaja                      {:mvn/version "0.6.8"}
           flybot-sg/lasagna-pull                {:git/url "https://github.com/flybot-sg/lasagna-pull.git"
                                                  :sha     "861ef192288907b46d400769cb68a19de115ad58"}

           ;; backend
           ring/ring-defaults                    {:mvn/version "0.3.4"}
           aleph/aleph                           {:mvn/version "0.6.1"}
           robertluo/fun-map                     {:mvn/version "0.5.110"}
           datalevin/datalevin                   {:mvn/version "0.8.5"}
           skydread1/reitit-oauth2               {:git/url "https://github.com/skydread1/reitit-oauth2.git"
                                                  :sha     "c06a3be2f00d5358a50c108816fe0cbfa9f67be1"}}
 :paths   ["server/src" "common/src" "resources"]
 :aliases
 {;;---------- SERVER ----------
  ;; JVM options to make datalevin work with java version > java8
  ;; alway use it
  :jvm-base {:jvm-opts ["--add-opens=java.base/java.nio=ALL-UNNAMED"
                        "--add-opens=java.base/sun.nio.ch=ALL-UNNAMED"]}

   ;; CLJ paths for the backend systems and tests
  :server/dev {:extra-paths ["config" "target" "common/test" "server/test"]}

  ;; Run clj tests
  :server/test {:extra-paths ["common/test" "server/test"]
                :extra-deps  {lambdaisland/kaocha {:mvn/version "1.80.1274"}}
                :main-opts   ["-m" "kaocha.runner"]}

  ;;---------- CLIENT ----------
  ;; use for both web and mobile
  :client  {:extra-deps {com.bhauman/figwheel-main             {:mvn/version "0.2.18"}
                         org.clojure/clojurescript             {:mvn/version "1.11.60"}
                         reagent/reagent                       {:mvn/version "1.2.0"}
                         cljsjs/react                          {:mvn/version "18.2.0-1"}
                         cljsjs/react-dom                      {:mvn/version "18.2.0-1"}
                         markdown-to-hiccup/markdown-to-hiccup {:mvn/version "0.6.2"}
                         cljs-ajax/cljs-ajax                   {:mvn/version "0.8.4"}
                         re-frame/re-frame                     {:mvn/version "1.3.0"}
                         day8.re-frame/http-fx                 {:mvn/version "0.2.4"}
                         day8.re-frame/test                    {:mvn/version "0.1.5"}}
            :extra-paths ["client/web/src" "client/common/src"
                          "client/web/test" "common/test"
                          "config" "target"]}

  ;;---------- MOBILE ----------
  ;; deps for react native - use with :client
  :mobile/rn {:extra-deps {org.clojure/clojurescript           {:mvn/version "1.10.773"} ;; last version causes error
                           camel-snake-kebab/camel-snake-kebab {:mvn/version "0.4.3"}
                           io.vouch/reagent-react-native       {:git/url "https://github.com/vouch-opensource/reagent-react-native.git"
                                                                :sha     "0fe1c600c9b81180f76b94ef6004c2f85e7d4aa0"}}
              :extra-paths ["client/mobile/src"]}
  
  ;; cljs repl for figwheel hot reloading development/testing
  ;; Run `npm run ios` in another terminal to start the simulator
  :mobile/ios {:main-opts ["--main"  "figwheel.main"
                           "--build" "ios"
                           "--repl"]}

  ;;---------- WEB ----------
  ;; cljs repl for figwheel hot reloading development/testing
  ;; be sure to not have a main.js in resources/public
  :web/dev {:main-opts ["--main"  "figwheel.main"
                        "--build" "dev"
                        "--repl"]}

  ;; build the optimised js bundle
  :web/prod {:main-opts ["--main"       "figwheel.main"
                         "--build-once" "prod"]}

  ;; Run the cljs tests
  :web/test {:main-opts ["-m" "figwheel.main"
                         "-m" "flybot.client.web.test-runner"]}

  ;; Run the cljs tests with chrome headless
  :web/test-headless {:main-opts ["-m" "figwheel.main"
                                  "-co" "tests.cljs.edn"
                                  "-m" "flybot.client.web.test-runner"]}

  ;;---------- BUILD ----------
  ;; build frontend js bundle : clj -T:build js-bundle
  ;; build backend uberjar: clj -T:build uber
  ;; build both js and jar : clj -T:build uber+js
  :build {:deps       {io.github.clojure/tools.build {:git/tag "v0.9.4" :git/sha "76b78fe"}}
          :ns-default build}

  ;; build image and push to image repo
  ;; clj -T:jib build
  :jib {:deps       {io.github.atomisthq/jibbit {:git/tag "v0.1.14" :git/sha "ca4f7d3"}}
        :ns-default jibbit.core
        :ns-aliases {jib jibbit.core}}
  
  :outdated {;; Note that it is `:deps`, not `:extra-deps`
             :deps {com.github.liquidz/antq {:mvn/version "RELEASE"}}
             :main-opts ["-m" "antq.core"]}}}